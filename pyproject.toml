[tool.poetry]
name = "clean_ioc"
version = "1.0.0"
description = "An IOC Container for Python 3.10+"
authors = ["Peter Daly"]
license = "MIT"
homepage = "https://github.com/peter-daly/clean_ioc"
repository = "https://github.com/peter-daly/clean_ioc"
documentation = "https://github.com/peter-daly/clean_ioc"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
]
packages = [
    { include = "clean_ioc" },
]
include = ["CHANGES.rst", "clean_ioc/py.typed", "clean_ioc/ext/fastapi/py.typed"]

[tool.poetry.dependencies]
python = "^3.10"
fastapi= { version = "^0.101.0", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.21.1"
assertive = "^0.0.1"
fastapi = "^0.101.0"
httpx = "^0.26.0"
pyright = "^1.1.362"
ruff = "^0.4.3"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocstrings = {version = "^0.24.0", extras = ["python"]}
mkdocs-material = "^9.5.9"


[tool.poetry.group.dev]
optional = true


[tool.poetry.extras]
fastapi = ["fastapi"]

[tool.coverage.paths]
source = ["clean_ioc", "*/site-packages"]
tests = ["tests"]

[tool.black]

[tool.isort]
profile = "black"


[tool.ruff]
extend-exclude = ["docs", ".tox"]
target-version = "py38"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "W",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "S",  # flake8-bandit
    "RUF",  # ruff-specific-rules
]
# Ignoring rules problematic with formatter
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = [
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]  # Ignore unused imports on init files
"tests/**/*.py" = ["S101"]  # Allow assert usage on tests


[tool.pytest.ini_options]
asyncio_mode = "auto"


[tool.coverage.run]
branch = true
source = ["clean_ioc", "tests"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
